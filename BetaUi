local UI = {}

-- Function to create a frame with a title and optional intro
function UI:CreateFrame(title, size, pos, introText)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, size.X, 0, size.Y)
    frame.Position = UDim2.new(0, pos.X, 0, pos.Y)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    frame.BorderSizePixel = 0

    -- Title label
    local label = Instance.new("TextLabel")
    label.Parent = frame
    label.Size = UDim2.new(1, 0, 0, 40)
    label.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    label.Text = title
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 20
    label.TextAlign = Enum.TextXAlignment.Center
    label.TextYAlignment = Enum.TextYAlignment.Center

    -- Intro Text
    if introText then
        local introLabel = Instance.new("TextLabel")
        introLabel.Parent = frame
        introLabel.Size = UDim2.new(1, 0, 0, 100)
        introLabel.Position = UDim2.new(0, 0, 0, 40)
        introLabel.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        introLabel.Text = introText
        introLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        introLabel.Font = Enum.Font.Gotham
        introLabel.TextSize = 16
        introLabel.TextAlign = Enum.TextXAlignment.Center
        introLabel.TextYAlignment = Enum.TextYAlignment.Top
        introLabel.TextWrapped = true
    end

    return frame
end

-- Button
function UI:CreateButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Parent = parent
    button.Size = UDim2.new(0, 200, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamSemibold
    button.TextSize = 18
    button.MouseButton1Click:Connect(callback)

    return button
end

-- Toggle
function UI:CreateToggle(parent, text, default, callback)
    local toggle = Instance.new("TextButton")
    toggle.Parent = parent
    toggle.Size = UDim2.new(0, 200, 0, 50)
    toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    toggle.Text = text .. ": " .. (default and "On" or "Off")
    toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggle.Font = Enum.Font.GothamSemibold
    toggle.TextSize = 18
    toggle.MouseButton1Click:Connect(function()
        default = not default
        toggle.Text = text .. ": " .. (default and "On" or "Off")
        callback(default)
    end)

    return toggle
end

-- Slider
function UI:CreateSlider(parent, min, max, default, callback)
    local slider = Instance.new("Frame")
    slider.Parent = parent
    slider.Size = UDim2.new(0, 200, 0, 50)
    slider.BackgroundColor3 = Color3.fromRGB(35, 35, 35)

    local bar = Instance.new("Frame")
    bar.Parent = slider
    bar.Size = UDim2.new(0, 180, 0, 5)
    bar.Position = UDim2.new(0, 10, 0.5, -2)
    bar.BackgroundColor3 = Color3.fromRGB(55, 55, 55)

    local handle = Instance.new("Frame")
    handle.Parent = bar
    handle.Size = UDim2.new(0, 20, 0, 20)
    handle.Position = UDim2.new(0, (default / max) * 180, 0, -7)
    handle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local mousePos = input.Position.X
            local newPos = math.clamp(mousePos - bar.AbsolutePosition.X, 0, 180)
            local value = (newPos / 180) * (max - min) + min
            handle.Position = UDim2.new(0, newPos, 0, -7)
            callback(value)
        end
    end)

    return slider
end

-- Key System (Enable/Disable features)
function UI:CreateKeySystem(parent, key, featureName, callback)
    local keyButton = Instance.new("TextButton")
    keyButton.Parent = parent
    keyButton.Size = UDim2.new(0, 200, 0, 50)
    keyButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    keyButton.Text = "Press Key to Toggle " .. featureName
    keyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    keyButton.Font = Enum.Font.GothamSemibold
    keyButton.TextSize = 18

    local enabled = false
    local function toggleFeature(input)
        if input.KeyCode == key then
            enabled = not enabled
            callback(enabled)
            keyButton.Text = featureName .. ": " .. (enabled and "Enabled" or "Disabled")
        end
    end

    game:GetService("UserInputService").InputBegan:Connect(toggleFeature)

    return keyButton
end

-- Tab system (Organize UI into tabs)
function UI:CreateTabBar(parent)
    local tabBar = Instance.new("Frame")
    tabBar.Parent = parent
    tabBar.Size = UDim2.new(1, 0, 0, 40)
    tabBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)

    return tabBar
end

function UI:CreateTab(tabBar, title)
    local tabButton = Instance.new("TextButton")
    tabButton.Parent = tabBar
    tabButton.Size = UDim2.new(0, 100, 1, 0)
    tabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    tabButton.Text = title
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.GothamSemibold
    tabButton.TextSize = 18

    return tabButton
end

-- Paragraph (Simple Text content)
function UI:CreateParagraph(parent, text)
    local paragraph = Instance.new("TextLabel")
    paragraph.Parent = parent
    paragraph.Size = UDim2.new(1, 0, 0, 100)
    paragraph.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    paragraph.Text = text
    paragraph.TextColor3 = Color3.fromRGB(255, 255, 255)
    paragraph.Font = Enum.Font.Gotham
    paragraph.TextSize = 16
    paragraph.TextAlign = Enum.TextXAlignment.Center
    paragraph.TextYAlignment = Enum.TextYAlignment.Top
    paragraph.TextWrapped = true

    return paragraph
end

-- Draggable functionality
function UI:EnableDraggable(frame)
    local dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    frame.InputChanged:Disconnect(update)
                end
            end)
        end
    end)

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(0, startPos.X + delta.X, 0, startPos.Y + delta.Y)
    end

    frame.InputChanged:Connect(update)
end

return UI
