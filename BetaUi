-- Beta UI Library Script

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Window library definition
local BetaUILib = {}
BetaUILib.__index = BetaUILib

function BetaUILib.new()
    local self = setmetatable({}, BetaUILib)
    self.KeybindEnabled = false  -- Default Keybind feature is off
    self.IsMinimized = false  -- Track minimize state
    return self
end

-- Create Window with title and options
function BetaUILib:MakeWindow(config)
    -- Creating window
    local window = Instance.new("ScreenGui")
    window.Name = config.Name or "BetaWindow"
    window.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    window.ResetOnSpawn = false
    window.DisplayOrder = 1

    -- Create frame for window
    local frame = Instance.new("Frame")
    frame.Parent = window
    frame.Size = UDim2.new(0, 600, 0, 400)  -- Medium size
    frame.Position = UDim2.new(0.5, -300, 0.5, -200)  -- Centered
    frame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    frame.BorderSizePixel = 0
    frame.ClipsDescendants = true
    frame.Name = "MainFrame"

    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = frame

    -- Create Title Bar with Minimize/Close Buttons
    local titleBar = Instance.new("Frame")
    titleBar.Parent = frame
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
    titleBar.BorderSizePixel = 0
    titleBar.Name = "TitleBar"

    -- Close Button (X)
    local closeButton = Instance.new("TextButton")
    closeButton.Parent = titleBar
    closeButton.Size = UDim2.new(0, 40, 0, 40)
    closeButton.Position = UDim2.new(1, -40, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextSize = 18
    closeButton.BorderSizePixel = 0
    closeButton.Name = "CloseButton"

    -- Minimize Button
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Parent = titleBar
    minimizeButton.Size = UDim2.new(0, 40, 0, 40)
    minimizeButton.Position = UDim2.new(1, -80, 0, 0)
    minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 50)
    minimizeButton.Text = "_"
    minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeButton.TextSize = 18
    minimizeButton.BorderSizePixel = 0
    minimizeButton.Name = "MinimizeButton"

    -- Minimize Button Functionality
    minimizeButton.MouseButton1Click:Connect(function()
        if not self.IsMinimized then
            -- Tween to minimize (hide frame)
            TweenService:Create(frame, TweenInfo.new(0.5), {Size = UDim2.new(0, 600, 0, 40)}):Play()
            self.IsMinimized = true
        else
            -- Tween to restore original size
            TweenService:Create(frame, TweenInfo.new(0.5), {Size = UDim2.new(0, 600, 0, 400)}):Play()
            self.IsMinimized = false
        end
    end)

    -- Close Button Functionality
    closeButton.MouseButton1Click:Connect(function()
        window:Destroy()
    end)

    -- Draggable Window Logic
    local dragging = false
    local dragInput, mousePos, framePos

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragInput = input
            mousePos = input.Position
            framePos = frame.Position
        end
    end)

    titleBar.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - mousePos
            frame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)

    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    -- Function for Notifications with Tweens
    function self:MakeNotification(config)
        local notification = Instance.new("Frame")
        notification.Parent = window
        notification.Size = UDim2.new(0, 300, 0, 50)
        notification.Position = UDim2.new(0.5, -150, 0, 20)
        notification.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        notification.BorderSizePixel = 0
        notification.Visible = true
        notification.Name = "NotificationFrame"

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 12)
        corner.Parent = notification

        local title = Instance.new("TextLabel")
        title.Parent = notification
        title.Size = UDim2.new(1, 0, 0.5, 0)
        title.Text = config.Name or "Notification"
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.TextSize = 18
        title.BackgroundTransparency = 1

        local content = Instance.new("TextLabel")
        content.Parent = notification
        content.Size = UDim2.new(1, 0, 0.5, 0)
        content.Text = config.Content or "Your message here."
        content.TextColor3 = Color3.fromRGB(200, 200, 200)
        content.TextSize = 14
        content.BackgroundTransparency = 1

        -- Tween in and out for notification
        TweenService:Create(notification, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -150, 0, 100)}):Play()
        wait(config.Time or 5)
        TweenService:Create(notification, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -150, 0, 20)}):Play()

        wait(0.5)
        notification:Destroy()
    end

    -- Example of adding a Tab with Options (Add buttons, toggles, etc.)
    local tabFrame = Instance.new("Frame")
    tabFrame.Parent = frame
    tabFrame.Size = UDim2.new(0, 600, 0, 360)
    tabFrame.Position = UDim2.new(0, 0, 0, 40)
    tabFrame.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    tabFrame.Name = "TabFrame"

    local tabLabel = Instance.new("TextLabel")
    tabLabel.Parent = tabFrame
    tabLabel.Size = UDim2.new(0, 600, 0, 40)
    tabLabel.Text = "This is a Tab"
    tabLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabLabel.TextSize = 20
    tabLabel.BackgroundTransparency = 1

    -- Add more UI elements or interactive buttons to the tab as needed

    return self
end

-- Instantiate and Use the UI
local BetaLib = BetaUILib.new()
local Window = BetaLib:MakeWindow({
    Name = "Beta UI Library"
})

-- Notification Example
BetaLib:MakeNotification({
    Name = "Welcome",
    Content = "This is the first notification!",
    Time = 5
})

-- Finished setup
