local UTGUILib = {}

local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

-- Utility function to update canvas size
local function UpdateCanvasSize(container)
    local layout = container:FindFirstChildOfClass("UIListLayout")
    if layout then
        container.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 20)
    end
end

-- Create window
function UTGUILib:CreateWindow(config)
    local title = config.Title or "UTG UI Library"
    local size = config.Size or UDim2.new(0, 350, 0, 400)

    local gui = Instance.new("ScreenGui")
    gui.Name = "UTGUILib"
    gui.ResetOnSpawn = false
    gui.Parent = game:GetService("CoreGui")

    local frame = Instance.new("Frame")
    frame.Size = size
    frame.Position = UDim2.new(0.5, -size.X.Offset/2, 0.5, -size.Y.Offset/2)
    frame.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = false -- Changed to false initially
    frame.Parent = gui

    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = UDim.new(0, 8)
    frameCorner.Parent = frame

    local topbar = Instance.new("TextLabel")
    topbar.Size = UDim2.new(1, 0, 0, 40)
    topbar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    topbar.BorderSizePixel = 0
    topbar.Text = "    " .. title  -- Adding space for padding
    topbar.Font = Enum.Font.GothamBold
    topbar.TextSize = 20
    topbar.TextColor3 = Color3.new(1, 1, 1)
    topbar.TextXAlignment = Enum.TextXAlignment.Left
    topbar.Draggable = true -- Added: Topbar is draggable
    topbar.Parent = frame -- Topbar is now a child of frame

    local topbarCorner = Instance.new("UICorner")
    topbarCorner.CornerRadius = UDim.new(0, 8)
    topbarCorner.Parent = topbar

    local closeBtn = Instance.new("TextButton")
    closeBtn.Text = "✕"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 18
    closeBtn.Size = UDim2.new(0, 40, 0, 40)
    closeBtn.Position = UDim2.new(1, -40, 0, 0)
    closeBtn.BackgroundColor3 = Color3.fromRGB(45, 0, 0)
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.BorderSizePixel = 0
    closeBtn.Parent = topbar -- Button is child of topbar

    local minBtn = Instance.new("TextButton")
    minBtn.Text = "–"
    minBtn.Font = Enum.Font.GothamBold
    minBtn.TextSize = 18
    minBtn.Size = UDim2.new(0, 40, 0, 40)
    minBtn.Position = UDim2.new(1, -80, 0, 0)
    minBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    minBtn.TextColor3 = Color3.new(1, 1, 1)
    minBtn.BorderSizePixel = 0
    minBtn.Parent = topbar -- Button is child of topbar

    local content = Instance.new("ScrollingFrame")
    content.Size = UDim2.new(1, -20, 1, -60)
    content.Position = UDim2.new(0, 10, 0, 50)
    content.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
    content.BorderSizePixel = 0
    content.CanvasSize = UDim2.new(0, 0, 0, 0)
    content.ScrollBarThickness = 6
    content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    content.Parent = frame -- Content is child of frame

    local contentCorner = Instance.new("UICorner")
    contentCorner.CornerRadius = UDim.new(0, 6)
    contentCorner.Parent = content

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 6)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = content

    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 10)
    padding.PaddingBottom = UDim.new(0, 10)
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 10)
    padding.Parent = content

    local elements = {}

    function elements:CreateButton(text, callback)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 0, 35)
        button.Text = text
        button.Font = Enum.Font.Gotham
        button.TextSize = 14
        button.TextColor3 = Color3.new(1, 1, 1)
        button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        button.BorderSizePixel = 0
        button.Parent = content

        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 6)
        buttonCorner.Parent = button

        button.MouseButton1Click:Connect(callback)
        UpdateCanvasSize(content)
        return button
    end

    function elements:CreateLabel(text)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 0, 30)
        label.Text = text
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.TextColor3 = Color3.new(1, 1, 1)
        label.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        label.BorderSizePixel = 0
        label.Parent = content

        local labelCorner = Instance.new("UICorner")
        labelCorner.CornerRadius = UDim.new(0, 6)
        labelCorner.Parent = label

        UpdateCanvasSize(content)
        return label
    end

    function elements:CreateToggle(text, callback)
        local state = false
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 0, 35)
        button.Text = "[ OFF ] " .. text
        button.Font = Enum.Font.Gotham
        button.TextSize = 14
        button.TextColor3 = Color3.new(1, 1, 1)
        button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        button.BorderSizePixel = 0
        button.Parent = content

        local toggleCorner = Instance.new("UICorner")
        toggleCorner.CornerRadius = UDim.new(0, 6)
        toggleCorner.Parent = button

        button.MouseButton1Click:Connect(function()
            state = not state
            button.Text = state and "[ ON ] " .. text or "[ OFF ] " .. text
            callback(state)
        end)

        UpdateCanvasSize(content)
        return button
    end

    -- Close and Minimize Functionality
    closeBtn.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)

    local minimized = false
    local originalSize = frame.Size
    local originalPosition = frame.Position
    minBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            -- Minimize:  Resize the frame to only show the topbar
            frame:TweenSize(
                UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, 40), -- Height of the topbar
                Enum.EasingDirection.Out,
                Enum.EasingStyle.Quad,
                0.3
            )
            content.Visible = false
            frame.Draggable = false -- Disable dragging when minimized.
        else
            -- Restore:  Resize the frame to its original size
            frame:TweenSize(
                originalSize,
                Enum.EasingDirection.Out,
                Enum.EasingStyle.Quad,
                0.3
            )
            content.Visible = true
            frame.Draggable = false -- Keep it false
        end
    end)

    return elements
end

return UTGUILib
